name: Deployment workflow

on: push # TODO: Change trigger

jobs:
  Create-source-dist:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          lfs: false
      - name: Create source distribution
        run: | 
          docker run \
              --volume $PWD:/host \
              --workdir /host/continuous-integration/linux \
              --env "PYTHONDONTWRITEBYTECODE=1" \
              ubuntu:20.04 \
              bash -c "./setup-python.sh && ./create-sdist.sh"
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: sdist
          path: dist/zivid*.tar.gz
          retention-days: 1

  Create-windows-binary-dist:
    runs-on: windows-2016
    strategy:
      matrix:
        #python-version: ["3.6", "3.7", "3.8", "3.9"]
        python-version: ["3.7"]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          lfs: false
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Setup
        run: python continuous-integration\windows\setup.py
      - name: Create binary distribution
        env:
          Zivid_DIR: 'C:\Program Files\Zivid\CMake\Zivid'
          CXX: 'cl.exe'
          CC: 'cl.exe'
        run: |
          pip install -r continuous-integration/python-requirements/dist.txt
          python setup.py bdist_wheel
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bdist-win-python${{matrix.python-version}}
          path: dist/zivid*.whl
          retention-days: 1

  Test-source-dist:
    needs: Create-source-dist
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ["ubuntu:16.04", "ubuntu:18.04", "ubuntu:20.04"]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: sdist
          path: dist
      - name: Install from sdist and test
        run: | 
          docker run \
              --volume $PWD:/host \
              --workdir /host/continuous-integration/linux \
              --env "PYTHONDONTWRITEBYTECODE=1" \
              ${{matrix.os}} \
              bash -c "./setup.sh && ./install-sdist.sh && ./test.sh"

      
  Test-windows-binary-dist:
    needs: Create-windows-binary-dist
    runs-on: windows-2016
    strategy:
      matrix:
        #python-version: ["3.6", "3.7", "3.8", "3.9"]
        python-version: ["3.7"]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: bdist-win-python${{matrix.python-version}}
          path: dist
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install from binary dist
        run: pip install dist/zivid*.whl 
      - name: Test
        run: python continuous-integration\windows\test.py


# TODO: Separate user setup from build setup on Windows?
# Nah, setup.py seems to cover it.

# TODO: Can I really not specify versions in dist.txt?

# TODO: Consider removing setup-python.sh and just using setup.sh
# Make a setup-user.sh instead? No it's basically the same because user must compile.